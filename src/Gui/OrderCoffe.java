
package Gui;

import Connection.ConnectionManager;
import Model.MessageDialog;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author audreynaila
 */
public class OrderCoffe extends javax.swing.JFrame {

    private boolean True;
    private ConnectionManager conMan;
    private Connection con;
    private Statement st;
    private ResultSet rs;
    private int Price;
    private int ProductID;
    private int Stock;
    private String Name;

    /**
     * Creates new form OrderCoffe
     */
    public OrderCoffe() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        detail1 = new javax.swing.JButton();
        detail2 = new javax.swing.JButton();
        detail3 = new javax.swing.JButton();
        detail4 = new javax.swing.JButton();
        detail5 = new javax.swing.JButton();
        detail6 = new javax.swing.JButton();
        btnlatte = new javax.swing.JButton();
        btnBuy3 = new javax.swing.JButton();
        btnBuy4 = new javax.swing.JButton();
        btnBuy5 = new javax.swing.JButton();
        btnBuy6 = new javax.swing.JButton();
        btnBuyy = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/keranjang.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 170, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Coffee Page.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 30, -1, 40));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 763, 170, 50));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 770, 160, 40));

        detail1.setText("jButton4");
        detail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail1ActionPerformed(evt);
            }
        });
        getContentPane().add(detail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 100, 30));

        detail2.setText("jButton4");
        detail2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail2ActionPerformed(evt);
            }
        });
        getContentPane().add(detail2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 430, 90, 30));

        detail3.setText("jButton4");
        detail3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail3ActionPerformed(evt);
            }
        });
        getContentPane().add(detail3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 430, 110, 30));

        detail4.setText("jButton4");
        detail4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail4ActionPerformed(evt);
            }
        });
        getContentPane().add(detail4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 710, 100, 30));

        detail5.setText("jButton4");
        detail5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail5ActionPerformed(evt);
            }
        });
        getContentPane().add(detail5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 710, 100, 30));

        detail6.setText("jButton4");
        detail6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail6ActionPerformed(evt);
            }
        });
        getContentPane().add(detail6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 710, 120, -1));

        btnlatte.setText("jButton4");
        btnlatte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlatteActionPerformed(evt);
            }
        });
        getContentPane().add(btnlatte, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 430, 90, 30));

        btnBuy3.setText("jButton4");
        btnBuy3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuy3ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuy3, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 430, 90, 30));

        btnBuy4.setText("jButton4");
        btnBuy4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuy4ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuy4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 710, 100, 30));

        btnBuy5.setText("jButton4");
        btnBuy5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuy5ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuy5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 710, 90, 30));

        btnBuy6.setText("jButton4");
        btnBuy6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuy6ActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuy6, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 710, 80, 30));

        btnBuyy.setText("jButton4");
        btnBuyy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyyActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuyy, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 100, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MessageDialog obj = new MessageDialog(this);
       obj.showMessage("Do You Want To Exit ?", "");
       if (obj.getMessageType() == MessageDialog.MessageType.OK) {
            System.out.println("User click ok");
        } else {
            System.out.println("User click cancel");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    HomeOrder hm = new HomeOrder();
    hm.setVisible(true);
    dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    OrderPlatter plt1 = new OrderPlatter();
    plt1.setVisible(true);
    dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void detail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail1ActionPerformed
        DetailPlatter1 platter1 = new DetailPlatter1();
        platter1.setVisible(true);
        dispose();

    }//GEN-LAST:event_detail1ActionPerformed

    private void detail2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail2ActionPerformed
        DetailPlatter2 platter2 = new DetailPlatter2();
        platter2.setVisible(true);
        dispose();

    }//GEN-LAST:event_detail2ActionPerformed

    private void detail3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail3ActionPerformed
        DetailPlatter3 platter3= new DetailPlatter3();
        platter3.setVisible(True);
        dispose();
    }//GEN-LAST:event_detail3ActionPerformed

    private void detail4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail4ActionPerformed
        DetailPlatter4 platter4= new DetailPlatter4();
        platter4.setVisible(True);
        dispose();
    }//GEN-LAST:event_detail4ActionPerformed

    private void detail5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail5ActionPerformed
        DetailPlatter5 platter5= new DetailPlatter5();
        platter5.setVisible(True);
        dispose();
    }//GEN-LAST:event_detail5ActionPerformed

    private void detail6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail6ActionPerformed
        DetailPlatter6 platter6= new DetailPlatter6();
        platter6.setVisible(True);
        dispose();
    }//GEN-LAST:event_detail6ActionPerformed

    private void btnlatteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlatteActionPerformed
     // Melakukan koneksi ke database
Connection conn = null;
Statement stmt = null;
try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (2, 'Coffee Latte', 28000, 50)";
    stmt.executeUpdate(sql);

    // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    
     // Mengambil data dari tabel orders_items
     String selectSql = "SELECT * FROM orders_items";
     Statement selectStmt = conn.createStatement();
     ResultSet rs = selectStmt.executeQuery(selectSql);

 

    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();

    }   
    
    }//GEN-LAST:event_btnlatteActionPerformed

    private void btnBuy3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuy3ActionPerformed
           // Melakukan koneksi ke database
     Connection conn = null;
     Statement stmt = null;
     try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (1, 'Black Coffee', 25000, 50)";
    stmt.executeUpdate(sql);

      // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
}

    }                                      

 private void btnBuy1ActionPerformed() {                                        
     // Melakukan koneksi ke database
Connection conn = null;
Statement stmt = null;
try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (3, 'White Coffe', 30000, 50)";
    stmt.executeUpdate(sql);

    // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();

    }   
    }//GEN-LAST:event_btnBuy3ActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        TabelTransaksi tb = new TabelTransaksi();
        tb.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btnBuy4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuy4ActionPerformed
             // Melakukan koneksi ke database
     Connection conn = null;
     Statement stmt = null;
     try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (1, 'Black Coffee', 25000, 50)";
    stmt.executeUpdate(sql);

      // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
}

                                      

                                       
     
    }//GEN-LAST:event_btnBuy4ActionPerformed

    private void btnBuy5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuy5ActionPerformed
             // Melakukan koneksi ke database
     Connection conn = null;
     Statement stmt = null;
     try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (1, 'Black Coffee', 25000, 50)";
    stmt.executeUpdate(sql);

      // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
}

    
    
  
    }//GEN-LAST:event_btnBuy5ActionPerformed

    private void btnBuy6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuy6ActionPerformed
             // Melakukan koneksi ke database
     Connection conn = null;
     Statement stmt = null;
     try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (1, 'Black Coffee', 25000, 50)";
    stmt.executeUpdate(sql);

      // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();
}

                                    
   
    }//GEN-LAST:event_btnBuy6ActionPerformed

    private void btnBuyyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyyActionPerformed
       
     // Melakukan koneksi ke database
Connection conn = null;
Statement stmt = null;
try {
    // Mengatur koneksi database
    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_caferinai", "root", "");
    stmt = conn.createStatement();

    String sql = "INSERT INTO orders_items (ProductID, Name, Price, Stock) VALUES (1, 'Black Coffe', 20000, 50)";
    stmt.executeUpdate(sql);

    // Menampilkan pesan berhasil
    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel orders_items.");

    // Menutup statement
    stmt.close();

    // Mengambil data dari tabel orders_items
    String selectSql = "SELECT * FROM orders_items";
    Statement selectStmt = conn.createStatement();
    ResultSet rs = selectStmt.executeQuery(selectSql);


    // Membuat model tabel
    DefaultTableModel model = new DefaultTableModel();
    JTable table = new JTable(model);

    // Menambahkan kolom ke model tabel
    model.addColumn("ProductID");
    model.addColumn("Name");
    model.addColumn("Price");
    model.addColumn("Stock");

    // Mengisi data ke model tabel
    while (rs.next()) {
        Object[] row = new Object[4];
        row[0] = rs.getInt("ProductID");
        row[1] = rs.getString("Name");
        row[2] = rs.getInt("Price");
        row[3] = rs.getInt("Stock");
        model.addRow(row);
    }

    // Menampilkan tabel dalam GUI TabelTransaksi
    TabelTransaksi tabelTransaksi = new TabelTransaksi();
    tabelTransaksi.setTableModel(model);
    tabelTransaksi.setVisible(true);

    // Menutup koneksi
    conn.close();
} catch (SQLException e) {
    e.printStackTrace();

    }   
    }//GEN-LAST:event_btnBuyyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderCoffe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderCoffe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderCoffe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderCoffe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderCoffe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuy3;
    private javax.swing.JButton btnBuy4;
    private javax.swing.JButton btnBuy5;
    private javax.swing.JButton btnBuy6;
    private javax.swing.JButton btnBuyy;
    private javax.swing.JButton btnlatte;
    private javax.swing.JButton detail1;
    private javax.swing.JButton detail2;
    private javax.swing.JButton detail3;
    private javax.swing.JButton detail4;
    private javax.swing.JButton detail5;
    private javax.swing.JButton detail6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private TabelTransaksi TabelTrasaksi() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
}
